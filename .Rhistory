gene_all <-subset(reads_all, gene_id==i)
(APA_table_name[i,"strand"]==1)
gene_all <- subset(gene_all, strand=="+")
Undiff <-subset(gene_all, treatment=="Undiff")$chromEnd
Diff <-subset(gene_all, treatment=="Diff")$chromEnd
((length(Undiff)>20)&&(length(Diff)>20))
test_ks_less <-ks.test(Undiff, Diff, alternative = "less")
test_ks_greater <- ks.test(Undiff, Diff, alternative = "greater")
plot(ecdf(Undiff))
plot(ecdf(Diff),add=T,col="green")
plot(density(Undiff))
getwd()
library(dplyr)
library(ggplot2)
library(sm)
library(stringr)
library(parallel)
library(tidyr)
library(biomaRt)
library(ggrepel)
Undiff_reads_pt <- read.csv("/Volumes/directrna/hES_update/WT_D0_dRNA/WT_D0_dRNA.id.bed.gene.txt", header = F, sep = " ",skip = 0)
colnames(Undiff_reads_pt) <- c("read_id","chrom","chromStart","chromEnd","strand","polyA_tail_length","gene_id")
#Undiff_reads_pt <- cbind(Undiff_reads_list,str_split_fixed(Undiff_reads_list$read_id, "[:]",3))[,c(1:6,9)]
#colnames(Undiff_reads_pt) <- c("read_id","chrom","chromStart","chromEnd","strand","gene_id","polyA_tail_length")
Undiff_reads_pt$strand <- as.factor(Undiff_reads_pt$strand)
Undiff_reads_pt$polyA_tail_length <- as.numeric(Undiff_reads_pt$polyA_tail_length)
Undiff_reads_pt$gene_id <- as.factor(Undiff_reads_pt$gene_id)
Undiff_reads_pt$treatment <- "Undiff"
Diff_reads_pt <- read.csv("/Volumes/directrna/hES_update/WT_D7_dRNA_4/WT_D7_dRNA_4.id.bed.gene.txt", header = F, sep = " ",skip = 0)
colnames(Diff_reads_pt) <- c("read_id","chrom","chromStart","chromEnd","strand","polyA_tail_length","gene_id")
#Diff_reads_pt <- cbind(Diff_reads_list,str_split_fixed(Diff_reads_list$read_id, "[:]",3))[,c(1:6,9)]
#colnames(Diff_reads_pt) <- c("read_id","chrom","chromStart","chromEnd","strand","gene_id","polyA_tail_length")
Diff_reads_pt$strand <- as.factor(Diff_reads_pt$strand)
Diff_reads_pt$polyA_tail_length <- as.numeric(Diff_reads_pt$polyA_tail_length)
Diff_reads_pt$gene_id <- as.factor(Diff_reads_pt$gene_id)
Diff_reads_pt$treatment <- "Diff"
reads_all <-rbind(Undiff_reads_pt, Diff_reads_pt)
reads_all$treatment <-as.factor(reads_all$treatment)
genes <- intersect(Undiff_reads_pt$gene_id, Diff_reads_pt$gene_id)
genes <- subset(genes, genes!=".")
n <- length(genes)
APA_table<- data.frame(matrix(ncol=4, nrow=(n)))
colnames(APA_table) <- c("gene_id","ensembl_gene_id","APA_change","pvalue")
APA_table$gene_id <- genes
APA_table$ensembl_gene_id <- gsub("\\.\\d+$", "", APA_table$gene_id)
geneID <- APA_table$ensembl_gene_id
head(geneID)
length(geneID)
ensembl <- useMart(biomart = "ensembl", dataset = "hsapiens_gene_ensembl")
gene_info <- getBM(attributes = c("ensembl_gene_id", "external_gene_name","strand"),
filters = "ensembl_gene_id",
values = geneID,
mart = ensembl)
APA_table_name <- left_join (APA_table, gene_info, by = "ensembl_gene_id")
row.names(APA_table_name) <- APA_table_name$gene_id
APA_table_name<- subset(APA_table_name, !is.na(strand))
genes<- APA_table_name$gene_id
n<- length(genes)
for (j in 1:n) {
print(j)
i<-genes[j]
gene_all <-subset(reads_all, gene_id==i)
if(APA_table_name[i,"strand"]==1){
gene_all <- subset(gene_all, strand=="+")
Undiff <-subset(gene_all, treatment=="Undiff")$chromEnd
Diff <-subset(gene_all, treatment=="Diff")$chromEnd
if ((length(Undiff)>20)&&(length(Diff)>20)){
test_ks_less <-ks.test(Undiff, Diff, alternative = "less")
test_ks_greater <- ks.test(Undiff, Diff, alternative = "greater")
}
}
if(APA_table_name[i,"strand"]==-1){
gene_all <- subset(gene_all, strand=="-")
Undiff <-subset(gene_all, treatment=="Undiff")$chromStart
Diff <-subset(gene_all, treatment=="Diff")$chromStart
if((length(Undiff)>20)&&(length(Diff)>20)){
test_ks_less <-ks.test(Diff, Undiff, alternative = "less")
test_ks_greater <- ks.test(Diff, Undiff, alternative = "greater")
}
}
APA_table_name[i,"pvalue"] <- min(test_ks_greater$p.value,test_ks_less$p.value)
APA_table_name[i,"distance"] <- max(test_Ks_greater$statistic,test_ks_less$statistic)
if (test_ks_greater$p.value<test_ks_less$p.value){
APA_table_name[i,"APA_change"] <- APA_table_name[i,"distance"]
}
if (test_ks_greater$p.value>test_ks_less$p.value){
APA_table_name[i,"APA_change"] <- APA_table_name[i,"distance"]*(-1)
}
if (test_ks_greater$p.value==test_ks_less$p.value){
APA_table_name[i,"APA_change"] <-0
}
}
for (j in 1:n) {
print(j)
i<-genes[j]
gene_all <-subset(reads_all, gene_id==i)
if(APA_table_name[i,"strand"]==1){
gene_all <- subset(gene_all, strand=="+")
Undiff <-subset(gene_all, treatment=="Undiff")$chromEnd
Diff <-subset(gene_all, treatment=="Diff")$chromEnd
if ((length(Undiff)>20)&&(length(Diff)>20)){
test_ks_less <-ks.test(Undiff, Diff, alternative = "less")
test_ks_greater <- ks.test(Undiff, Diff, alternative = "greater")
}
}
if(APA_table_name[i,"strand"]==-1){
gene_all <- subset(gene_all, strand=="-")
Undiff <-subset(gene_all, treatment=="Undiff")$chromStart
Diff <-subset(gene_all, treatment=="Diff")$chromStart
if((length(Undiff)>20)&&(length(Diff)>20)){
test_ks_less <-ks.test(Diff, Undiff, alternative = "less")
test_ks_greater <- ks.test(Diff, Undiff, alternative = "greater")
}
}
APA_table_name[i,"pvalue"] <- min(test_ks_greater$p.value,test_ks_less$p.value)
APA_table_name[i,"distance"] <- max(test_ks_greater$statistic,test_ks_less$statistic)
if (test_ks_greater$p.value<test_ks_less$p.value){
APA_table_name[i,"APA_change"] <- APA_table_name[i,"distance"]
}
if (test_ks_greater$p.value>test_ks_less$p.value){
APA_table_name[i,"APA_change"] <- APA_table_name[i,"distance"]*(-1)
}
if (test_ks_greater$p.value==test_ks_less$p.value){
APA_table_name[i,"APA_change"] <-0
}
}
test_table<-APA_table_name
APA_table_name <- subset(APA_table_name, !is.na(pvalue))
APA_table_name$P_adj <- p.adjust(APA_table_name$pvalue, method = "fdr")
APA_table_name$Col <- "gray"
APA_table_name$APA_trend <- "no change"
APA_table_name[((APA_table_name[,"P_adj"]<0.05)&(APA_table_name[,"APA_change"]>(0.1))),"Col"] <-"red"
APA_table_name[((APA_table_name[,"P_adj"]<0.05)&(APA_table_name[,"APA_change"]>(0.1))),"APA_trend"] <-"longer"
APA_table_name[((APA_table_name[,"P_adj"]<0.05)&(APA_table_name[,"APA_change"]<(-0.1))),"Col"] <-"blue"
APA_table_name[((APA_table_name[,"P_adj"]<0.05)&(APA_table_name[,"APA_change"]<(-0.1))),"APA_trend"] <-"shorter"
down <- length(subset(APA_table_name,Col=="blue")$gene_id)
up <- length(subset(APA_table_name,Col=="red")$gene_id)
all <- length(APA_table_name$gene_id)
plot(x=APA_table_name$APA_change,  y=-log10(APA_table_name$P_adj),
main ="H9 D0 vs D7 neural differentiation",  pch=20, sub = paste(down,"shortened","and",up,"lengthend" ,"in all", all, "events",sep=" "),
xlab = "APA change (D7- D0)",  ylab = "-log10(adjusted p value)",  col = APA_table_name$Col, cex=0.7)
APA_table_name<- test_table
for (j in 501:n) {
print(j)
i<-genes[j]
gene_all <-subset(reads_all, gene_id==i)
if(APA_table_name[i,"strand"]==1){
gene_all <- subset(gene_all, strand=="+")
Undiff <-subset(gene_all, treatment=="Undiff")$chromEnd
Diff <-subset(gene_all, treatment=="Diff")$chromEnd
if ((length(Undiff)>20)&&(length(Diff)>20)){
test_ks_less <-ks.test(Undiff, Diff, alternative = "less")
test_ks_greater <- ks.test(Undiff, Diff, alternative = "greater")
}
}
if(APA_table_name[i,"strand"]==-1){
gene_all <- subset(gene_all, strand=="-")
Undiff <-subset(gene_all, treatment=="Undiff")$chromStart
Diff <-subset(gene_all, treatment=="Diff")$chromStart
if((length(Undiff)>20)&&(length(Diff)>20)){
test_ks_less <-ks.test(Diff, Undiff, alternative = "less")
test_ks_greater <- ks.test(Diff, Undiff, alternative = "greater")
}
}
APA_table_name[i,"pvalue"] <- min(test_ks_greater$p.value,test_ks_less$p.value)
APA_table_name[i,"distance"] <- max(test_ks_greater$statistic,test_ks_less$statistic)
if (test_ks_greater$p.value<test_ks_less$p.value){
APA_table_name[i,"APA_change"] <- APA_table_name[i,"distance"]
}
if (test_ks_greater$p.value>test_ks_less$p.value){
APA_table_name[i,"APA_change"] <- APA_table_name[i,"distance"]*(-1)
}
if (test_ks_greater$p.value==test_ks_less$p.value){
APA_table_name[i,"APA_change"] <-0
}
}
library(dplyr)
library(stringr)
library(tidyr)
library(rtracklayer)
##################################################parallel computation################################################################
Undiff_reads_pt <- read.csv("/Volumes/directrna/hES_update/WT_D0_dRNA/WT_D0_dRNA.id.bed.gene.txt", header = F, sep = " ",skip = 0)
colnames(Undiff_reads_pt) <- c("read_id","chrom","chromStart","chromEnd","strand","polyA_tail_length","gene_id")
Undiff_reads_pt$strand <- as.factor(Undiff_reads_pt$strand)
Undiff_reads_pt$polyA_tail_length <- as.numeric(Undiff_reads_pt$polyA_tail_length)
Undiff_reads_pt$gene_id <- as.factor(Undiff_reads_pt$gene_id)
Undiff_reads_pt$treatment <- "Undiff"
Diff_reads_pt <- read.csv("/Volumes/directrna/hES_update/WT_D7_dRNA_4/WT_D7_dRNA_4.id.bed.gene.txt", header = F, sep = " ",skip = 0)
colnames(Diff_reads_pt) <- c("read_id","chrom","chromStart","chromEnd","strand","polyA_tail_length","gene_id")
Diff_reads_pt$strand <- as.factor(Diff_reads_pt$strand)
Diff_reads_pt$polyA_tail_length <- as.numeric(Diff_reads_pt$polyA_tail_length)
Diff_reads_pt$gene_id <- as.factor(Diff_reads_pt$gene_id)
Diff_reads_pt$treatment <- "Diff"
reads_all <-rbind(Undiff_reads_pt, Diff_reads_pt)
reads_all$treatment <-as.factor(reads_all$treatment)
gene_annotation <- read.csv("/Volumes/zzhang/Human_annotation/gencode.v43.chr_patch_hapl_scaff.annotation.gtf", header = F, sep = "\t",skip = 4)
gene_annotation <- subset(gene_annotation, V3=="gene")
gene_annotation_expand <- gene_annotation %>%
mutate(V9 = as.character(V9)) %>%
separate_wider_regex(V9,patterns = c("gene_id ", gene_id=".\\w*","; gene_type ",
gene_biotype=".\\w*","; gene_name ",
external_gene_name=".\\S*",";"),
too_few = "align_start")
gene_annotation_expand$strand <- gene_annotation_expand$V7
View(gene_annotation)
View(gene_annotation_expand)
gene_annotation_expand <- gene_annotation %>%
mutate(V9 = as.character(V9)) %>%
separate_wider_regex(V9,patterns = c("gene_id ", gene_id=".\\w*","; gene_type ",
gene_biotype=".\\w*","; gene_name ",
external_gene_name=".\\S*",";"),
too_few = "align_start")
gene_annotation_expand <- gene_annotation %>%
mutate(V9 = as.character(V9)) %>%
separate_wider_regex(V9,patterns = c("gene_id ", gene_id=".\\S*","; gene_type ",
gene_biotype=".\\S*","; gene_name ",
external_gene_name=".\\S*",";"),
too_few = "align_start")
gene_annotation_expand$strand <- gene_annotation_expand$V7
gene_info <- as.data.frame(gene_annotation_expand[,c("gene_id","external_gene_name","strand")])
rownames(gene_info) <- gene_annotation_expand$ensembl_gene_id
APA_table_name <- left_join (APA_table, gene_info, by = "gene_id")
row.names(APA_table_name) <- APA_table_name$gene_id
APA_table_name<- subset(APA_table_name, !is.na(strand))
PAS_table<- APA_table_name[,c(1:2,5:6)]
genes<- APA_table_name$gene_id
n<- length(genes)
gene_info <- as.data.frame(gene_annotation_expand[,c("gene_id","external_gene_name","strand")])
rownames(gene_info) <- gene_annotation_expand$gene_id
APA_table_name <- left_join (APA_table, gene_info, by = "gene_id")
row.names(APA_table_name) <- APA_table_name$gene_id
APA_table_name<- subset(APA_table_name, !is.na(strand))
PAS_table<- APA_table_name[,c(1:2,5:6)]
genes<- APA_table_name$gene_id
n<- length(genes)
View(PAS_table)
genes <- intersect(Undiff_reads_pt$gene_id, Diff_reads_pt$gene_id)
genes <- subset(genes, genes!=".")
n <- length(genes)
APA_table<- data.frame(matrix(ncol=4, nrow=(n)))
colnames(APA_table) <- c("gene_id","short_gene_id","APA_change","pvalue")
APA_table$gene_id <- genes
APA_table$short_gene_id <- gsub("\\.\\d+$", "", APA_table$gene_id)
geneID <- APA_table$ensembl_gene_id
head(geneID)
length(geneID)
View(APA_table_name)
geneID <- APA_table$gene_id
head(geneID)
length(geneID)
APA_table_name <- left_join (APA_table, gene_info, by = "gene_id")
row.names(APA_table_name) <- APA_table_name$gene_id
APA_table_name<- subset(APA_table_name, !is.na(strand))
PAS_table<- APA_table_name[,c(1:2,5:6)]
genes<- APA_table_name$gene_id
n<- length(genes)
View(APA_table)
View(APA_table_name)
View(PAS_table)
PAS_table[,c("PASs","PASs reads","PASs fraction")]<-NA
bed_df<- data.frame(matrix(ncol=4, nrow=(1)))
row.names(PAS_table) <- PAS_table$gene_id
bed_df <- data.frame(
chrom = character(), # Numeric column
start = numeric(), # Numeric column
end = numeric(),
name = character()
)
add_df <- data.frame()
for (j in 1:n) {
print(j)
i<-genes[j]
gene_all <-subset(reads_all, gene_id==i)
if(APA_table_name[i,"strand"]=="+"){
gene_all <- subset(gene_all, strand=="+")
Undiff <-subset(gene_all, treatment=="Undiff")$chromEnd
Diff <-subset(gene_all, treatment=="Diff")$chromEnd}
if(APA_table_name[i,"strand"]=="-"){
gene_all <- subset(gene_all, strand=="-")
Undiff <-subset(gene_all, treatment=="Undiff")$chromStart
Diff <-subset(gene_all, treatment=="Diff")$chromStart}
if ((length(Undiff)>20)&&(length(Diff)>20)){
freq_table <- table(c(Diff, Undiff))
density_vals <- as.numeric(prop.table(freq_table))
peak_indices <- which(density_vals>=min(sort(density_vals, decreasing = T)[1:50],na.rm = T))
peaks_df <- data.frame(
Value = as.numeric(names(freq_table))[peak_indices],
Frequency = as.numeric(freq_table[peak_indices]),
Density = density_vals[peak_indices]
)
df <- peaks_df[order(peaks_df$Value), ]
group <- cumsum(c(TRUE, diff(df$Value) > 10))
# Aggregate within groups
combined_df <- do.call(rbind, lapply(split(df, group), function(group_data) {
# Find the row with the highest density in the group
max_density_row <- group_data[which.max(group_data$Density), ]
# Sum the Frequency and Density for the group
max_density_row$Frequency <- sum(group_data$Frequency)
max_density_row$Density <- sum(group_data$Density)
return(max_density_row)
}))
df <- combined_df
group <- cumsum(c(TRUE, diff(df$Value) > 10))
# Aggregate within groups
combined_df <- do.call(rbind, lapply(split(df, group), function(group_data) {
# Find the row with the highest density in the group
max_density_row <- group_data[which.max(group_data$Density), ]
# Sum the Frequency and Density for the group
max_density_row$Frequency <- sum(group_data$Frequency)
max_density_row$Density <- sum(group_data$Density)
return(max_density_row)
}))
call_df <- combined_df[which((combined_df$Density>=0.01)&(combined_df$Frequency>1)),]
# Display the peaks
call_df<-(call_df[order(call_df$Density, decreasing = T),])
add_df<- data.frame(matrix(ncol=4, nrow=(length(call_df$Value))))
if(APA_table_name[i,"strand"]=="+"){
add_df<-data.frame(
chrom = gene_all$chrom[1], # Numeric column
start = as.numeric(call_df$Value), # Numeric column
end = as.numeric(call_df$Value)+5,
name = gene_info[i,"external_gene_name"],
density= as.numeric(call_df$Density),
strand = gene_info[i,"strand"]
)}
if(APA_table_name[i,"strand"]=="-"){
add_df<-data.frame(
chrom = gene_all$chrom[1], # Numeric column
start = as.numeric(call_df$Value)-5, # Numeric column
end = as.numeric(call_df$Value),
name = gene_info[i,"external_gene_name"],
density= as.numeric(call_df$Density),
strand = gene_info[i,"strand"]
)}
call_df$Density <-round(as.numeric(call_df$Density), 4)
PAS_table[i,c("PASs","PASs reads","PASs fraction")] <- c(APA_table_name[i,"external_gene_name"],paste(call_df$Value, collapse = ","),
paste(call_df$Frequency, collapse = ","),paste(call_df$Density, collapse = ","))
bed_df <-rbind(bed_df, add_df)
}
}
write.table(bed_df,file="PASs.bed",row.names = F,col.names = F,quote = F,sep = "\t")
write.table(PAS_table,file="PASs_table.txt",row.names = F,col.names = T,quote = F,sep = "\t")
for (j in 1:n) {
print(j)
i<-genes[j]
gene_all <-subset(reads_all, gene_id==i)
if(APA_table_name[i,"strand"]=="+"){
gene_all <- subset(gene_all, strand=="+")
Undiff <-subset(gene_all, treatment=="Undiff")$chromEnd
Diff <-subset(gene_all, treatment=="Diff")$chromEnd}
if(APA_table_name[i,"strand"]=="-"){
gene_all <- subset(gene_all, strand=="-")
Undiff <-subset(gene_all, treatment=="Undiff")$chromStart
Diff <-subset(gene_all, treatment=="Diff")$chromStart}
if ((length(Undiff)>20)&&(length(Diff)>20)){
freq_table <- table(c(Diff, Undiff))
density_vals <- as.numeric(prop.table(freq_table))
peak_indices <- which(density_vals>=min(sort(density_vals, decreasing = T)[1:50],na.rm = T))
peaks_df <- data.frame(
Value = as.numeric(names(freq_table))[peak_indices],
Frequency = as.numeric(freq_table[peak_indices]),
Density = density_vals[peak_indices]
)
df <- peaks_df[order(peaks_df$Value), ]
group <- cumsum(c(TRUE, diff(df$Value) > 10))
# Aggregate within groups
combined_df <- do.call(rbind, lapply(split(df, group), function(group_data) {
# Find the row with the highest density in the group
max_density_row <- group_data[which.max(group_data$Density), ]
# Sum the Frequency and Density for the group
max_density_row$Frequency <- sum(group_data$Frequency)
max_density_row$Density <- sum(group_data$Density)
return(max_density_row)
}))
df <- combined_df
group <- cumsum(c(TRUE, diff(df$Value) > 10))
# Aggregate within groups
combined_df <- do.call(rbind, lapply(split(df, group), function(group_data) {
# Find the row with the highest density in the group
max_density_row <- group_data[which.max(group_data$Density), ]
# Sum the Frequency and Density for the group
max_density_row$Frequency <- sum(group_data$Frequency)
max_density_row$Density <- sum(group_data$Density)
return(max_density_row)
}))
call_df <- combined_df[which((combined_df$Density>=0.03)&(combined_df$Frequency>5)),]
# Display the peaks
call_df<-(call_df[order(call_df$Density, decreasing = T),])
add_df<- data.frame(matrix(ncol=4, nrow=(length(call_df$Value))))
if(APA_table_name[i,"strand"]=="+"){
add_df<-data.frame(
chrom = gene_all$chrom[1], # Numeric column
start = as.numeric(call_df$Value), # Numeric column
end = as.numeric(call_df$Value)+5,
name = gene_info[i,"external_gene_name"],
density= as.numeric(call_df$Density),
strand = gene_info[i,"strand"]
)}
if(APA_table_name[i,"strand"]=="-"){
add_df<-data.frame(
chrom = gene_all$chrom[1], # Numeric column
start = as.numeric(call_df$Value)-5, # Numeric column
end = as.numeric(call_df$Value),
name = gene_info[i,"external_gene_name"],
density= as.numeric(call_df$Density),
strand = gene_info[i,"strand"]
)}
call_df$Density <-round(as.numeric(call_df$Density), 4)
PAS_table[i,c("PASs","PASs reads","PASs fraction")] <- c(APA_table_name[i,"external_gene_name"],paste(call_df$Value, collapse = ","),
paste(call_df$Frequency, collapse = ","),paste(call_df$Density, collapse = ","))
bed_df <-rbind(bed_df, add_df)
}
}
write.table(bed_df,file="PASs.bed",row.names = F,col.names = F,quote = F,sep = "\t")
write.table(PAS_table,file="PASs_table.txt",row.names = F,col.names = T,quote = F,sep = "\t")
View(bed_df)
test.df <- unique(bed_df)
write.table(test.df,file="PASs.bed",row.names = F,col.names = F,quote = F,sep = "\t")
write.table(bed_df[334:,],file="PASs.bed",row.names = F,col.names = F,quote = F,sep = "\t")
(bed_df[334:,]
bed_df[334:,]
write.table(bed_df[334:length(bed_df$chrom),],file="PASs.bed",row.names = F,col.names = F,quote = F,sep = "\t")
APA_genes <-duplicated(bed_df[334:length(bed_df$chrom),])
duplicated(bed_df[334:length(bed_df$chrom),])
install.packages("roxygen2")
library(roxygen2)
library(devtools)
dir()
setwd("./R_pack/")
ll
dir()
devtools::create("myfirstpackage")
dir()
dir("./myfirstpackage/")
bed_df<-bed_df[334:length(bed_df$chrom),]
?load_gtf
?load_all
#' Load a gtf file for reference
#'
#' This function loads a gtf file and extract necessary information of each gene from it.
#' @param gtf infile path to the input gtf file
#' @return a matrix of the gtf file
#' @export
load_gtf <- function(infile){
gene_annotation <- read.csv(infile, header = F, sep = "\t",skip = 4)
gene_annotation <- subset(gene_annotation, V3=="gene")
gene_annotation_expand <- gene_annotation %>%
mutate(V9 = as.character(V9)) %>%
separate_wider_regex(V9,patterns = c("gene_id ", gene_id=".\\S*","; gene_type ",
gene_biotype=".\\S*","; gene_name ",
external_gene_name=".\\S*",";"),
too_few = "align_start")
gene_annotation_expand$strand <- gene_annotation_expand$V7
gene_info <- as.data.frame(gene_annotation_expand[,c("gene_id","external_gene_name","strand")])
rownames(gene_info) <- gene_annotation_expand$gene_id
gene_info
}
devtools::document()
dir()
?devtools::document()
?devtools::document
dir()
setwd("./myfirstpackage/")
devtools::document()
dir()
devtools::document()
devtools::document()
dir()
devtools::document()
?load_gtf
devtools::document()
devtools::document()
rm(list = c("load_gtf"))
devtools::document()
dir("./man/")
?devtools::create
?load_gtf
rm(list = c("load_gtf"))
devtools::document()
?load_gtf
devtools::use_vignette("introduction")
usethat::use_vignette("introduction")
install.packages("usethat")
install.packages("usethat")
install.packages("remotes")
remotes::install_github("tidylab/usethat")
remotes::install_github("tidylab/usethat")
dir()
setwd("~/Desktop/dRNA/WT_D7_dRNA/D0_D7/tail_update/git_clone/KSAPA/KSAPA/")
CSH_data <- fread("/Volumes/directrna/hES_update/CSH_hES_0.01_D7_D0_update.tsv")
devtools::document()
remove.packages("tidytree")
devtools::document()
library("dbplyr")
install.packages("dbplyr")
devtools::document()
install.packages("dbplyr")
install.packages("dplyr")
install.packages("rlang")
install.packages("DBI")  # Another dependency
install.packages("dplyr")
dir()
devtools::document()
CSH_data <- fread("/Volumes/directrna/hES_update/CSH_hES_0.01_D7_D0_update.tsv")
CSH_test <- CSH_plot(CSH_data, delta = 0.2)
CSH_test <- APA_plot(CSH_data, delta = 0.2)
dev.off()
plot(1:100)
View(CSH_test)
setnames(CSH_data, old = "APA_change",ew = "CS_shift")
setnames(CSH_data, old = "APA_change",new = "CS_shift")
CSH_test <- CSH_plot(CSH_data, delta = 0.2)

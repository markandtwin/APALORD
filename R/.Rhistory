dir()
devtools::document()
devtools::check()
library(dplyr)
library(stringr)
library(tidyr)
library(pbmcapply)
library(devtools)
library(roxygen2)
infile <-"/Volumes/zzhang/Human_annotation/gencode.v43.chr_patch_hapl_scaff.annotation.gtf"
gtf_df <- read.delim(infile, header = F, sep = "\t", comment="#")
gene_annotation <- subset(gtf_df, V3=="gene")
head(gtf_df)
test <- subset(gtf_df, V1=="chr1")
write.table(test,file="../inst/extdata/hg38_chr21.gtf",quote = F,col.names = F, row.names = F,sep = "\t")
test <- subset(gtf_df, V1=="chr21")
write.table(test,file="../inst/extdata/hg38_chr21.gtf",quote = F,col.names = F, row.names = F,sep = "\t")
dir()
ll
dir("./inst/")
dir("../inst/")
dir("../inst/extdata")
devtools::document()
ll
getwd()
library(dplyr)
library(stringr)
library(tidyr)
library(pbmcapply)
library(readr)
library(data.table)
library(devtools)
library(roxygen2)
extdata_path <- system.file("extdata",package = "KSAPA")
gtf.file <- paste0(extdata_path,"/hg38_chr20.gtf")
gene_reference <- load_gtf(gtf.file,cores = 7)
devtools::document()
gene_reference <- load_gtf(gtf.file,cores = 7)
ample1 <- paste0(extdata_path,"/D0_isoquant")
sample2 <- paste0(extdata_path,"/D7_isoquant")
reads <- load_samples(sample1,sample2, group1="D0",group2="D7")
sample1 <- paste0(extdata_path,"/D0_isoquant")
sample2 <- paste0(extdata_path,"/D7_isoquant")
reads <- load_samples(sample1,sample2, group1="D0",group2="D7")
PAU_data <- PAU_by_sample(gene_reference,reads,cores=7,direct_RNA = T)
APA_data <- APA_profile(gene_reference,reads,control="D0",experimental="D7", cores = 7, direct_RNA = T)
View(gene_reference)
View(PAU_data)
View(APA_data)
View(APA_data)
library(dplyr)
library(stringr)
library(tidyr)
library(pbmcapply)
library(readr)
library(data.table)
library(devtools)
library(roxygen2)
gtf.file <- "~/Desktop/Human_annotation/gencode.v43.chr_patch_hapl_scaff.annotation.gtf"
gene_reference <- load_gtf(gtf.file,cores = 7)
sample1 <- "~/Desktop/KSAPA/WT_D0_dRNA.no_sec.isoquant/OUT/"
sample2 <- "~/Desktop/KSAPA/WT_D7_dRNA_4.isoquant/"
reads <- load_samples(sample1,sample2, group1="D0",group2="D7")
PAU_data <- PAU_by_sample(gene_reference,reads,cores=5,direct_RNA = T)
APA_data <- APA_profile(gene_reference,reads,control="D0",experimental="D7", cores = 5, direct_RNA = T)
devtools::document()
APA_data <- APA_profile(gene_reference,reads,control="D0",experimental="D7", cores = 5, direct_RNA = T)
str(APA_data)
APA_gene_table <- APA_plot(APA_data)
View(APA_gene_table)
write.table(PAS_data,file="../PAU_by_sample_hES_0.01_D7_D0.tsv",quote = F,col.names = T, row.names = F,sep = "\t")
write.table(PAU_data,file="../PAU_by_sample_hES_0.01_D7_D0.tsv",quote = F,col.names = T, row.names = F,sep = "\t")
write.table(APA_data,file="../APA_data_hES_0.01_D7_D0.tsv",quote = F,col.names = T, row.names = F,sep = "\t")
write.table(APA_gene_table,file="../APA_gene_table_hES_0.01_D7_D0.tsv",quote = F,col.names = T, row.names = F,sep = "\t")
devtools::document()
APA_gene_table <- APA_plot(APA_data)
devtools::document()
devtools::document()
APA_gene_table <- APA_plot(APA_data)
APA_gene_table <- APA_plot(APA_data)
View(APA_gene_table)
longer_df<- APA_gene_table[APA_trend=="longer"]
View(longer_df)
View(PAU_data)
plot(table(longer_df$number_of_PAS))
gene_explore(gene_reference, reads,c("JAG1","ENSG00000088766","SLC2A10"),
control="D0",experimental="D7", APA_table = APA_data, direct_RNA = T)
shorter_df<- APA_gene_table[APA_trend=="shorter"]
plot(table(shorter_df$number_of_PAS))
plot(table(shorter_df$number_of_PAS),type = "h")
plot(table(shorter_df$number_of_PAS),type = "c")
?base:plot
?plot
plot(table(shorter_df$number_of_PAS),type = "s")
plot(table(shorter_df$number_of_PAS),type = "S")
plot(table(shorter_df$number_of_PAS),type = "l")
barplot(table(shorter_df$number_of_PAS))
head(shorter_df)
barplot(table(as.numeric(shorter_df$number_of_PAS)))
barplot(table(as.numeric(longer_df$number_of_PAS)))
barplot(table(as.numeric(APA_data$number_of_PAS)))
barplot(table(as.numeric(longer_df$number_of_PAS)), add = T)
barplot(table(as.numeric(APA_data$number_of_PAS)))
barplot(table(as.numeric(longer_df$number_of_PAS)), add = T,col = "red")
barplot(table(as.numeric(shorter_df$number_of_PAS)), add = T,col = "blue")
getwd()
pie(table(shorter_df$APA_type))
pie(table(longer_df$APA_type))
no_change_df<- APA_gene_table[APA_trend=="no change"]
pie(table(no_change_df$APA_type))
barplot(table(as.numeric(no_change_df$number_of_PAS)))
barplot(table(as.numeric(APA_gene_table$number_of_PAS)))
View(APA_data)
write.table(shorter_df[APA_type=="Last_exon_tandem_APA"],file="../../shorter_tandem_genes.txt",quote = F,col.names = F, row.names = F,sep = "\t")
write.table(shorter_df[APA_type=="Last_exon_tandem_APA"]$gene_name,file="../../shorter_tandem_genes.txt",quote = F,col.names = F, row.names = F,sep = "\t")
write.table(shorter_df[APA_type=="Mixed_APA"]$gene_name,file="../../shorter_mixed_genes.txt",quote = F,col.names = F, row.names = F,sep = "\t")
write.table(longer_df[APA_type=="Mixed_APA"]$gene_name,file="../../longer_mixed_genes.txt",quote = F,col.names = F, row.names = F,sep = "\t")
gc()
write.table(longer_df[APA_type=="Last_exon_tandem_APA"]$gene_name,file="../../longer_tandem_genes.txt",quote = F,col.names = F, row.names = F,sep = "\t")
View(APA_gene_table)
APA_data$number_of_PAS <- as.numeric(APA_data$number_of_PAS)
APA_gene_table <- APA_plot(APA_data)
shorter_df<- APA_gene_table[APA_trend=="shorter"]
longer_df<- APA_gene_table[APA_trend=="longer"]
head(APA_data)
barplot(table(shorter_df$number_of_PAS))
barplot(table(longer_df$number_of_PAS))
barplot(table(APA_gene_table$number_of_PAS))
View(APA_gene_table)
View(APA_data)
devtools::document()
ll
sample1 <- paste0(extdata_path,"/D0_isoquant")
extdata_path <- system.file("extdata",package = "KSAPA")
sample1 <- paste0(extdata_path,"/D0_isoquant")
sample2 <- paste0(extdata_path,"/D7_isoquant")
test_reads <- load_samples(sample1,sample2, group1="D0",group2="D7")
?fread()
?list.files
files1 <- list.files(path = sample1, full.names = TRUE)
files1
str(files1)
class(files1)
files1[1]
files1 <- list.files(path = sample1, full.names = F)
files1
extdata_path
devtools::document()
test_reads <- load_samples(sample1,sample2, group1="D0",group2="D7")
install.packages('R.utils')
library(utils)
test_reads <- load_samples(sample1,sample2, group1="D0",group2="D7")
head(test_reads)
head(reads)
devtools::document()
library(utils)
devtools::document()
installed.packages()["data.table", ]
installed.packages()["utils", ]
devtools::document()
devtools::document()
gtf.file <- paste0(extdata_path,"/hg38_chr20.gtf.gz")
test_gtf <-load_gtf(paste0(extdata_path,"/hg38_chr20.gtf.gz"), cores=7)
head(test_gtf)
names(gene_reference)
pwd
devtools::document()
test_gtf <-load_gtf(paste0(extdata_path,"/hg38_chr20.gtf.gz"), cores=7)
head(test_gtf)
test_APA_data <- APA_profile(test_gene_reference,test_reads,control="D0",experimental="D7", cores = 7, direct_RNA = T)
test_APA_data <- APA_profile(test_gtf,test_reads,control="D0",experimental="D7", cores = 7, direct_RNA = T)
class(test_gtf)
class(test_reads)
test_APA_data <- APA_profile(gene_reference,reads,control="D0",experimental="D7", cores = 7, direct_RNA = T)
gc()
head(test_gtf)
head(gene_reference)
rm(reads)
rm(gene_reference)
rm(APA_data)
rm(APA_gene_table)
rm(PAU_data)
extdata_path <- system.file("extdata",package = "KSAPA")
gtf.file <- paste0(extdata_path,"/hg38_chr20.gtf.gz")
gene_reference <- load_gtf(gtf.file,cores = 7)
sample1 <- paste0(extdata_path,"/D0_isoquant")
sample2 <- paste0(extdata_path,"/D7_isoquant")
reads <- load_samples(sample1,sample2, group1="D0",group2="D7")
PAU_data <- PAU_by_sample(gene_reference,reads,cores=7,direct_RNA = T)
APA_data <- APA_profile(gene_reference,reads,control="D0",experimental="D7", cores = 7, direct_RNA = T)
control_df <- reads[treatment == control, .SD[.N >= min_counts], by = gene_id]
control="D0"
experimental="D7"
min_counts=10
min_reads=5
min_percent=1
cores=7
direct_RNA=T
control_df <- reads[treatment == control, .SD[.N >= min_counts], by = gene_id]
experimental_df <- reads[treatment == experimental, .SD[.N >= min_counts], by = gene_id]
# Genes of interest
genes <- intersect(control_df$gene_id, experimental_df$gene_id)
genes <- genes[genes != "."]
# Pre-allocate the APA_table
APA_table <- data.table(gene_id = genes,
short_gene_id = gsub("\\.\\d+$", "", genes),
APA_change = NA, pvalue = NA, APA_type = "No APA")
# Merge APA_table with gene_info
gene_info <-gene_reference
APA_table_name <- merge(APA_table, gene_info, by = "gene_id", all.x = TRUE)
setkey(APA_table_name, gene_id)  # Set key for faster subsetting
# Define PAS_fun with data.table operations for speed
PAS_fun <- function(df_3end, min_percent=1, min_reads=5){
if (length(df_3end) >= min_reads) {
freq_table <- table(df_3end)
density_vals <- as.numeric(prop.table(freq_table))
peak_indices <- which(density_vals >= min(sort(density_vals, decreasing = TRUE)[1:50], na.rm = TRUE))
peaks_df <- data.table(Value = as.numeric(names(freq_table))[peak_indices],
Frequency = as.numeric(freq_table[peak_indices]),
Density = 100 * density_vals[peak_indices])
peaks_df <- peaks_df[order(Value)]
df <- peaks_df[order(peaks_df$Value), ]
group <- cumsum(c(TRUE, diff(df$Value) > 20))  # Group peaks
# Combine peak groups
combined_df <- rbindlist(lapply(split(df, group), function(group_data) {
max_density_row <- group_data[which.max(group_data$Density), ]
max_density_row$Frequency <- sum(group_data$Frequency)
max_density_row$Density <- sum(group_data$Density)
return(max_density_row)
}))
call_df <- combined_df[combined_df$Density >= min_percent & combined_df$Frequency > 2, ]
call_df <- call_df[order(call_df$Density, decreasing = TRUE), ]
if (nrow(call_df) > 0) {
call_df[, Density := round(Density, 2)]
PAS_gene_table <- as.vector(c(length(call_df$Value),paste(call_df$Value, collapse = ","),
paste(call_df$Frequency, collapse = ","),paste(call_df$Density, collapse = ",")))
return(PAS_gene_table)
}
}
}
# Define APA_fun optimized with data.table
APA_fun <- function(gene) {
gene_all <- reads[gene_id == gene]
APA_gene <- APA_table_name[gene_id == gene]
if (direct_RNA == T) {
gene_all <- gene_all[strand == gene_info[gene, strand]]
}
if (all(table(gene_all$sample)>=min_counts)) {
strand <- gene_info[gene, strand]
if (strand == "+") {
control_3end <- gene_all[treatment == control, chromEnd]
experimental_3end <- gene_all[treatment == experimental, chromEnd]
test_ks_less <- ks.test(control_3end, experimental_3end, alternative = "less")
test_ks_greater <- ks.test(control_3end, experimental_3end, alternative = "greater")
APA_gene$pvalue <- min(test_ks_greater$p.value, test_ks_less$p.value)
APA_gene$distance <- max(test_ks_greater$statistic, test_ks_less$statistic)
} else {
control_3end <- gene_all[treatment == control, chromStart]
experimental_3end <- gene_all[treatment == experimental, chromStart]
test_ks_less <- ks.test(experimental_3end,control_3end ,alternative = "less")
test_ks_greater <- ks.test(experimental_3end,control_3end ,alternative = "greater")
APA_gene$pvalue <- min(test_ks_greater$p.value, test_ks_less$p.value)
APA_gene$distance <- max(test_ks_greater$statistic, test_ks_less$statistic)
}
if (test_ks_greater$p.value < test_ks_less$p.value) {
APA_gene$APA_change <- APA_gene$distance
} else if (test_ks_greater$p.value > test_ks_less$p.value) {
APA_gene$APA_change <- -APA_gene$distance
} else {
APA_gene$APA_change <- 0
}
df_3end <- c(control_3end, experimental_3end)
PAS_info <- PAS_fun(df_3end, min_percent, min_reads)
if (!is.null(PAS_info)) {
PASs_gene <- as.numeric(unlist(strsplit(PAS_info[2], split = ",")))
PAUs_control <- round(sapply(PASs_gene, function(x) mean(abs(control_3end - x) <= 20) * 100), 2)
PAUs_experimental <- round(sapply(PASs_gene, function(x) mean(abs(experimental_3end - x) <= 20) * 100), 2)
PAU_changes <- round(PAUs_experimental - PAUs_control, 2)
APA_gene[,c("number_of_PAS","PAS_coordinates","PAS_read_counts","PAS_PAUs") := as.list(PAS_info)]
APA_gene[, c("PAUs_control", "PAUs_experimental", "PAU_changes") := as.list(c(paste(PAUs_control, collapse = ","),
paste(PAUs_experimental, collapse = ","),paste(PAU_changes, collapse = ",")))]
if (as.numeric(PAS_info[1]) > 1) {
if((strand=="-")&&(PASs_gene[length(PASs_gene)]<APA_gene[,"last_exon_chromEnd"])){
APA_gene[,"APA_type"] <- "Last_exon_tandem_APA"
}
else if((strand=="+")&&(PASs_gene[1]>APA_gene[,"last_exon_chromStart"])){
APA_gene[,"APA_type"] <- "Last_exon_tandem_APA"
}
else {
APA_gene[,"APA_type"] <- "Mixed_APA"
}
}
}
return(APA_gene)
}
}
pbmclapply(genes, APA_fun, mc.cores = cores)
output <- pbmclapply(genes, APA_fun, mc.cores = cores)
devtools::document()
APA_data <- APA_profile(gene_reference,reads,control="D0",experimental="D7", cores = 7, direct_RNA = T)
head(APA_data)
output_df <- rbindlist(output, fill = T)
output_df$number_of_PAS < as.numeric(output_df$number_of_PAS)
output_df <- output_df[, !c("last_exon_chromStart", "last_exon_chromEnd","distal_stop_codon_Start","distal_stop_codon_End","distance"), with = FALSE]
output_df$number_of_PAS < as.numeric(output_df$number_of_PAS)
output_df
output <- pbmclapply(genes, APA_fun, mc.cores = cores)
# Combine the results
output_df <- rbindlist(output, fill = T)
class(output_df)
output_df$number_of_PAS <- as.numeric(output_df$number_of_PAS)
output_df
devtools::document()
devtools::document()
